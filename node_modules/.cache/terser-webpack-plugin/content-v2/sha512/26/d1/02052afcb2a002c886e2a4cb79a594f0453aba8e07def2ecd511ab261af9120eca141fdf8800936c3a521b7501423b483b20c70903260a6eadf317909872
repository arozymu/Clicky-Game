{"map":"{\"version\":3,\"sources\":[\"/Users/annarozymuradov/Desktop/HW/Clicky-Game/clicky-game/src/components/MatchCard/MatchCard.js\",\"/Users/annarozymuradov/Desktop/HW/Clicky-Game/clicky-game/src/components/Wrapper/Wrapper.js\",\"/Users/annarozymuradov/Desktop/HW/Clicky-Game/clicky-game/src/components/Title/Title.js\",\"/Users/annarozymuradov/Desktop/HW/Clicky-Game/clicky-game/src/App.js\",\"/Users/annarozymuradov/Desktop/HW/Clicky-Game/clicky-game/src/serviceWorker.js\",\"/Users/annarozymuradov/Desktop/HW/Clicky-Game/clicky-game/src/index.js\"],\"names\":[\"MatchCard\",\"props\",\"react_default\",\"a\",\"createElement\",\"onClick\",\"setClicked\",\"id\",\"className\",\"alt\",\"name\",\"src\",\"image\",\"Wrapper\",\"children\",\"Title\",\"correctGuesses\",\"bestScore\",\"clickMessage\",\"App\",\"state\",\"matches\",\"_this\",\"clickedMatch\",\"filter\",\"match\",\"clicked\",\"console\",\"log\",\"i\",\"length\",\"setState\",\"sort\",\"b\",\"Math\",\"random\",\"_this2\",\"this\",\"components_Wrapper_Wrapper\",\"components_Title_Title\",\"map\",\"components_MatchCard_MatchCard\",\"key\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"q+BAYeA,SATG,SAAAC,GAAK,OAEpBC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,QAAS,WAAA,OAAMJ,EAAMK,WAAWL,EAAMM,KAAKC,UAAU,iBACzDN,EAAAC,EAAAC,cAAA,MAAA,CAAKI,UAAU,iBACdN,EAAAC,EAAAC,cAAA,MAAA,CAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,YCFvBC,SAFC,SAAAZ,GAAK,OAAIC,EAAAC,EAAAC,cAAA,MAAA,CAAKI,UAAU,WAAWP,EAAMa,YCE1CC,SAFD,SAAAd,GAAK,OAAIC,EAAAC,EAAAC,cAAA,KAAA,CAAII,UAAU,SAASP,EAAMa,mBCIhDE,SAAiB,GACjBC,EAAY,EACZC,EAAe,qFAyHJC,6MApHbC,MAAQ,CACNC,QAAAA,EACAL,eAAAA,EACAC,UAAAA,EACAC,aAAAA,KAGFZ,WAAa,SAAAC,GAGX,IAAMc,EAAUC,EAAKF,MAAMC,QAGrBE,EAAeF,EAAQG,OAAO,SAAAC,GAAK,OAAIA,EAAMlB,KAAOA,IAI1D,GAAIgB,EAAa,GAAGG,QAAS,CAE3BC,QAAQC,IAAI,oBAAsBZ,GAClCW,QAAQC,IAAI,eAAiBX,GAE7BD,EAAiB,EACjBE,EAAe,gBAEf,IAAK,IAAIW,EAAI,EAAGA,EAAIR,EAAQS,OAAQD,IAClCR,EAAQQ,GAAGH,SAAU,EAGvBJ,EAAKS,SAAS,CAAEb,aAAAA,IAChBI,EAAKS,SAAS,CAAEf,eAAAA,IAChBM,EAAKS,SAAS,CAAEV,QAAAA,SAGX,GAAIL,EAAiB,GAG1BO,EAAa,GAAGG,SAAU,EAK1BR,EAAe,0DAFfF,EAIqBC,IACnBA,EAAYD,EACZM,EAAKS,SAAS,CAAEd,UAAAA,KAIlBI,EAAQW,KAAK,SAAU7B,EAAG8B,GAAK,MAAO,GAAMC,KAAKC,WAGjDb,EAAKS,SAAS,CAAEV,QAAAA,IAChBC,EAAKS,SAAS,CAAEf,eAAAA,IAChBM,EAAKS,SAAS,CAAEb,aAAAA,QACX,CAGLK,EAAa,GAAGG,SAAU,EAG1BV,EAAiB,EAGjBE,EAAe,sBACfD,EAAY,GACZK,EAAKS,SAAS,CAAEd,UAAAA,IAEhB,IAAK,IAAIY,EAAI,EAAGA,EAAIR,EAAQS,OAAQD,IAClCR,EAAQQ,GAAGH,SAAU,EAIvBL,EAAQW,KAAK,SAAU7B,EAAG8B,GAAK,MAAO,GAAMC,KAAKC,WAGjDb,EAAKS,SAAS,CAAEV,QAAAA,IAChBC,EAAKS,SAAS,CAAEf,eAAAA,IAChBM,EAAKS,SAAS,CAAEb,aAAAA,8EAKX,IAAAkB,EAAAC,KACP,OACEnC,EAAAC,EAAAC,cAACkC,EAAD,KACEpC,EAAAC,EAAAC,cAACmC,EAAD,KAAA,uBAEArC,EAAAC,EAAAC,cAAA,KAAA,CAAII,UAAU,gBACX6B,KAAKjB,MAAMF,cAGdhB,EAAAC,EAAAC,cAAA,KAAA,CAAII,UAAU,4BAAd,oBACoB6B,KAAKjB,MAAMJ,eAC7Bd,EAAAC,EAAAC,cAAA,KAAA,MAFF,eAGeiC,KAAKjB,MAAMH,WAE1Bf,EAAAC,EAAAC,cAAA,MAAA,CAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,MAAA,CAAKI,UAAU,OACZ6B,KAAKjB,MAAMC,QAAQmB,IAAI,SAAAf,GAAK,OAC3BvB,EAAAC,EAAAC,cAACqC,EAAD,CACEnC,WAAY8B,EAAK9B,WACjBC,GAAIkB,EAAMlB,GACVmC,IAAKjB,EAAMlB,GACXK,MAAOa,EAAMb,oBA5GX+B,EAAAA,WCCEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAStB,MACvB,2DCZNuB,EAAAA,EAASC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from \\\"react\\\";\\nimport \\\"./MatchCard.css\\\";\\n\\nconst MatchCard = props => (\\n\\n\\t\\t\\t<div onClick={() => props.setClicked(props.id)} className=\\\"card col-md-3\\\">\\n\\t\\t\\t\\t<div className=\\\"img-container\\\">\\n\\t\\t\\t\\t\\t<img alt={props.name} src={props.image} />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n);\\n\\nexport default MatchCard;\",\"import React from \\\"react\\\";\\nimport \\\"./Wrapper.css\\\";\\n\\nconst Wrapper = props => <div className=\\\"wrapper\\\">{props.children}</div>;\\n\\nexport default Wrapper;\",\"import React from \\\"react\\\";\\nimport \\\"./Title.css\\\";\\n\\nconst Title = props => <h1 className=\\\"title\\\">{props.children}</h1>;\\n\\nexport default Title;\",\"import React, { Component } from \\\"react\\\";\\nimport MatchCard from \\\"./components/MatchCard\\\";\\nimport Wrapper from \\\"./components/Wrapper\\\";\\nimport Title from \\\"./components/Title\\\";\\nimport matches from \\\"./matchcards.json\\\";\\nimport \\\"./App.css\\\";\\n\\nlet correctGuesses = 0;\\nlet bestScore = 0;\\nlet clickMessage = \\\"Click on a soccer player to gain points! Click on the same one twice and you lose!\\\";\\n\\nclass App extends Component {\\n\\n  // Setting this.state.matches to the matches json array\\n  state = {\\n    matches,\\n    correctGuesses,\\n    bestScore,\\n    clickMessage\\n  };\\n\\n  setClicked = id => {\\n\\n    // Make a copy of the state matches array to work with\\n    const matches = this.state.matches;\\n\\n    // Filter for the clicked match\\n    const clickedMatch = matches.filter(match => match.id === id);\\n\\n    // If the matched image's clicked value is already true, \\n    // do the game over actions\\n    if (clickedMatch[0].clicked) {\\n\\n      console.log(\\\"Correct Guesses: \\\" + correctGuesses);\\n      console.log(\\\"Best Score: \\\" + bestScore);\\n\\n      correctGuesses = 0;\\n      clickMessage = \\\"Second click.\\\"\\n\\n      for (let i = 0; i < matches.length; i++) {\\n        matches[i].clicked = false;\\n      }\\n\\n      this.setState({ clickMessage });\\n      this.setState({ correctGuesses });\\n      this.setState({ matches });\\n\\n      // Otherwise, if clicked = false, and the user hasn't finished\\n    } else if (correctGuesses < 11) {\\n\\n      // Set its value to true\\n      clickedMatch[0].clicked = true;\\n\\n      // increment the appropriate counter\\n      correctGuesses++;\\n\\n      clickMessage = \\\"Great! You haven't click on that one yet! Keep going!\\\";\\n\\n      if (correctGuesses > bestScore) {\\n        bestScore = correctGuesses;\\n        this.setState({ bestScore });\\n      }\\n\\n      // Shuffle the array to be rendered in a random order\\n      matches.sort(function (a, b) { return 0.5 - Math.random() });\\n\\n      // Set this.state.matches equal to the new matches array\\n      this.setState({ matches });\\n      this.setState({ correctGuesses });\\n      this.setState({ clickMessage });\\n    } else {\\n\\n      // Set its value to true\\n      clickedMatch[0].clicked = true;\\n\\n      // restart the guess counter\\n      correctGuesses = 0;\\n\\n      // the user to play again\\n      clickMessage = \\\"100% lets try again\\\";\\n      bestScore = 12;\\n      this.setState({ bestScore });\\n\\n      for (let i = 0; i < matches.length; i++) {\\n        matches[i].clicked = false;\\n      }\\n\\n      // Shuffle the array to be rendered in a random order\\n      matches.sort(function (a, b) { return 0.5 - Math.random() });\\n\\n      // Set this.state.matches equal to the new matches array\\n      this.setState({ matches });\\n      this.setState({ correctGuesses });\\n      this.setState({ clickMessage });\\n\\n    }\\n  };\\n\\n  render() {\\n    return (\\n      <Wrapper>\\n        <Title>Click Soccer Player</Title>\\n\\n        <h3 className=\\\"scoreSummary\\\">\\n          {this.state.clickMessage}\\n        </h3>\\n\\n        <h3 className=\\\"scoreSummary card-header\\\">\\n          Correct Guesses: {this.state.correctGuesses}\\n          <br />\\n          Best Score: {this.state.bestScore}\\n        </h3>\\n        <div className=\\\"container\\\">\\n          <div className=\\\"row\\\">\\n            {this.state.matches.map(match => (\\n              <MatchCard\\n                setClicked={this.setClicked}\\n                id={match.id}\\n                key={match.id}\\n                image={match.image}\\n              />\\n            ))}\\n          </div>\\n        </div>\\n\\n      </Wrapper>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\\n\\n\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,function(e){e.exports=[{id:1,image:\"./assets/images/david-de-gea.png\",clicked:!1},{id:2,image:\"./assets/images/Evra.png\",clicked:!1},{id:3,image:\"./assets/images/Vidic.png\",clicked:!1},{id:4,image:\"./assets/images/Rio-Ferdinand.png\",clicked:!1},{id:5,image:\"./assets/images/rafael.png\",clicked:!1},{id:6,image:\"./assets/images/nani.png\",clicked:!1},{id:7,image:\"./assets/images/Paul-Scholes.png\",clicked:!1},{id:8,image:\"./assets/images/carrick.png\",clicked:!1},{id:9,image:\"./assets/images/amderson.png\",clicked:!1},{id:10,image:\"./assets/images/cristiano_ronaldo.png\",clicked:!1},{id:11,image:\"./assets/images/Rooney.png\",clicked:!1},{id:12,image:\"./assets/images/Sir.png\",clicked:!1}]},,,function(e,t,a){e.exports=a(20)},,,,,,function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){\"use strict\";a.r(t);var s=a(0),c=a.n(s),i=a(2),n=a.n(i),r=(a(15),a(3)),o=a(4),l=a(7),m=a(5),d=a(8),g=(a(16),function(e){return c.a.createElement(\"div\",{onClick:function(){return e.setClicked(e.id)},className:\"card col-md-3\"},c.a.createElement(\"div\",{className:\"img-container\"},c.a.createElement(\"img\",{alt:e.name,src:e.image})))}),u=(a(17),function(e){return c.a.createElement(\"div\",{className:\"wrapper\"},e.children)}),k=(a(18),function(e){return c.a.createElement(\"h1\",{className:\"title\"},e.children)}),h=a(6),f=(a(19),0),p=0,S=\"Click on a soccer player to gain points! Click on the same one twice and you lose!\",v=function(e){function t(){var e,a;Object(r.a)(this,t);for(var s=arguments.length,c=new Array(s),i=0;i<s;i++)c[i]=arguments[i];return(a=Object(l.a)(this,(e=Object(m.a)(t)).call.apply(e,[this].concat(c)))).state={matches:h,correctGuesses:f,bestScore:p,clickMessage:S},a.setClicked=function(e){var t=a.state.matches,s=t.filter(function(t){return t.id===e});if(s[0].clicked){console.log(\"Correct Guesses: \"+f),console.log(\"Best Score: \"+p),f=0,S=\"Second click.\";for(var c=0;c<t.length;c++)t[c].clicked=!1;a.setState({clickMessage:S}),a.setState({correctGuesses:f}),a.setState({matches:t})}else if(f<11)s[0].clicked=!0,S=\"Great! You haven't click on that one yet! Keep going!\",++f>p&&(p=f,a.setState({bestScore:p})),t.sort(function(e,t){return.5-Math.random()}),a.setState({matches:t}),a.setState({correctGuesses:f}),a.setState({clickMessage:S});else{s[0].clicked=!0,f=0,S=\"100% lets try again\",p=12,a.setState({bestScore:p});for(var i=0;i<t.length;i++)t[i].clicked=!1;t.sort(function(e,t){return.5-Math.random()}),a.setState({matches:t}),a.setState({correctGuesses:f}),a.setState({clickMessage:S})}},a}return Object(d.a)(t,e),Object(o.a)(t,[{key:\"render\",value:function(){var e=this;return c.a.createElement(u,null,c.a.createElement(k,null,\"Click Soccer Player\"),c.a.createElement(\"h3\",{className:\"scoreSummary\"},this.state.clickMessage),c.a.createElement(\"h3\",{className:\"scoreSummary card-header\"},\"Correct Guesses: \",this.state.correctGuesses,c.a.createElement(\"br\",null),\"Best Score: \",this.state.bestScore),c.a.createElement(\"div\",{className:\"container\"},c.a.createElement(\"div\",{className:\"row\"},this.state.matches.map(function(t){return c.a.createElement(g,{setClicked:e.setClicked,id:t.id,key:t.id,image:t.image})}))))}}]),t}(s.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));n.a.render(c.a.createElement(v,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[9,1,2]]]);","extractedComments":[]}